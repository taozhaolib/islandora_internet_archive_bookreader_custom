<?php

/**
 * @file
 * The islandora_internet_archive_bookreader_custom moudule.
 */

define('ISLANDORA_BOOKREADER_CUSTOM_COLLECTIONS', 'book_collection_selector');
define('ISLANDORA_BOOKREADER_CUSTOM_PDF_DOWNLOAD_SHOW', 'pdf_download_show');
define('ISLANDORA_BOOKREADER_CUSTOM_PAGE_DOWNLOAD_SHOW', 'page_download_show');
define('ISLANDORA_BOOKREADER_CUSTOM_SOCIAL_LINK_SHOW', 'social_link_show');


/**
 * Implements hook_menu().
 */
function islandora_internet_archive_bookreader_custom_menu() {
    
    module_load_include('module', 'islandora', 'islandora');
    
    $items['islandora/object/%islandora_object/pdf_generator'] = array(
        'title' => 'Generate Book PDF',
        'page callback' => 'islandora_internet_archive_bookreader_custom_pdf_generator',
        'page arguments' => array(2),
        'type' => MENU_LOCAL_TASK,
        'access callback' => 'islandora_bookreader_custom_access_callback',
        'weight' => 5,
        'access arguments' => array(
        array(
          ISLANDORA_MANAGE_PROPERTIES,
          ISLANDORA_METADATA_EDIT,
          ISLANDORA_ADD_DS,
          ISLANDORA_PURGE,
          ISLANDORA_INGEST,
        ), 2, "pdf_generator"),
    );

    $items['admin/islandora/islandora_viewers/islandora_bookreader_custom'] = array(
        'title' => 'Islandora Internet Archive Bookreader Customization Configuration:',
        'description' => 'Configure the customizations of the Islandora Internet Archive Bookreader.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('islandora_bookreader_custom_settings'),
        'access arguments' => array('Islandora bookreader custom settings'),
        'type' => MENU_NORMAL_ITEM,
    );
    
    $items['islandora_solr_view_feed/collection/get/views'] = array(
        'page callback' => 'load_collection_view_associations',
        'access arguments' => array('administer Islandora Solr View Feed'),
        'file' => 'includes/utilities.inc',
        'delivery callback' => 'deliver_collection_view_associations',
        'type' => MENU_CALLBACK,
    );
    
    $items['islandora/object/%islandora_object/custom/%/%islandora_datastream/download'] = array(
        'page callback' => 'islandora_bookreader_custom_datastream_download',
        'page arguments' => array(4,5),
        'type' => MENU_CALLBACK,
        'access callback' => 'islandora_datastream_access',
        'access arguments' => array(ISLANDORA_VIEW_OBJECTS, 5),
        'load arguments' => array(2),
    );
  return $items;
}

function islandora_internet_archive_bookreader_theme_registry_alter(&$theme_registry) {
    $theme_registry["islandora_internet_archive_bookreader"]["includes"][] = drupal_get_path('module', 'islandora_internet_archive_bookreader_custom') . "/theme/theme.inc";
    $theme_registry["islandora_internet_archive_bookreader"]["preprocess functions"][] = "islandora_internet_archive_bookreader_preprocess_html";
    $theme_registry["islandora_book_page"]["includes"][] = drupal_get_path('module', 'islandora_internet_archive_bookreader_custom') . "/theme/theme.inc";
    $theme_registry["islandora_book_page"]["preprocess functions"][] = "islandora_book_page_preprocess_html";
}

function islandora_internet_archive_bookreader_custom_pdf_generator(AbstractObject $object) {

    module_load_include('inc', 'islandora_internet_archive_bookreader_custom', 'includes/book_pdf_generator');
    $pid = $object->id;
    $message = islandora_internet_archive_bookreader_custom_pdf_generator_pid($pid);
    drupal_set_message(t('%d datastream sucessfully created from book %o', array(
        '%d' => 'PDF',
        '%o' => $object->label))
    );
    $url = $GLOBALS['base_url']."/islandora/object/".$pid;    
    drupal_goto($url);
    exit();
}

function islandora_internet_archive_bookreader_custom_block_info() {
  $blocks = array();

  $blocks['social_link_block'] = array(
    'info' => t('Block displaying social links for islandora bookreader'),
  );
  
  $blocks['reader_block'] = array(
    'info' => t('Block displaying download links for islandora bookreader'),
  );
  
  return $blocks;
}

/**
* Implements hook_block_view().
*/
function islandora_internet_archive_bookreader_custom_block_view($delta = '') {
    
    $block = array();    
    module_load_include('module', 'islandora', 'islandora');
    module_load_include('inc', 'islandora_internet_archive_bookreader_custom', 'includes/utilities');
    module_load_include('inc', 'islandora_embed', 'includes/response_generator');
    
    try{
        if($pid = get_pid_by_url()){

            $object = islandora_object_load($pid);
            
            if(empty($object) || hasAccessCustomFeature($object, "download_block") == FALSE){
                return null;
            }

            $fedoraObjExt = new FedoraObjectExtended($object->id, $object->repository);
            $model = $fedoraObjExt->getFedoraObjectModel();            
            if(empty($model) || $model !== "bookCModel"){
                return;
            }
            switch ($delta) {                
                case 'social_link_block':                    
                    $block['subject'] = 'Share this book:';
                    $block['content'] = bookreader_custom_social_link_block_view($object);
                    break;                
                case 'reader_block':
                    $block['subject'] = 'Book and pages download links:';
                    $block['content'] = bookreader_custom_download_block_view($object);
                    break;
                default:
                    break;
            }
        }
    }
    catch(Exception $e){
        drupal_set_message(t('Unable to build the custom islandora book blocks %e', array('%e' => $e)), 'error');
    }
    return $block;
}

function islandora_bookreader_custom_datastream_download($newFileName, AbstractDatastream $datastream) {
    module_load_include('inc', 'islandora', 'includes/mimetype.utils');
    module_load_include('inc', 'islandora', 'includes/datastream');

    $GLOBALS['devel_shutdown'] = FALSE;

    try{
//        if ($version !== NULL) {
//          if (isset($datastream[$version])) {
//            $datastream = $datastream[$version];
//          }
//          else {
//            return drupal_not_found();
//          }
//        }
        header('Content-type: ' . $datastream->mimetype);
        if ($datastream->controlGroup == 'M' || $datastream->controlGroup == 'X') {
          header('Content-length: ' . $datastream->size);
        }

        $extension = '.' . islandora_get_extension_for_mimetype($datastream->mimetype);
        // Prevent adding on a duplicate extension.
        $label = $datastream->label;
        $extension_length = strlen($extension);
        $duplicate_extension_position = strlen($label) > $extension_length ?
          strripos($label, $extension, -$extension_length) :
          FALSE;
        $filename = $newFileName;
        if ($duplicate_extension_position === FALSE) {
          $filename .= $extension;
        }
        header("Content-Disposition: attachment; filename=\"$filename\"");


        $cache_check = islandora_view_datastream_cache_check($datastream);
        if ($cache_check !== 200) {
          if ($cache_check === 304) {
            header('HTTP/1.1 304 Not Modified');
          }
          elseif ($cache_check === 412) {
            header('HTTP/1.0 412 Precondition Failed');
          }
        }
        islandora_view_datastream_set_cache_headers($datastream);

        drupal_page_is_cacheable(FALSE);

        // New content needed.
        if ($cache_check === 200) {
          // We need to see if the chunking is being requested. This will mainly
          // happen with iOS video requests as they do not support any other way
          // to receive content for playback.
          $chunk_headers = FALSE;
          if (isset($_SERVER['HTTP_RANGE'])) {
            // Set headers specific to chunking.
            $chunk_headers = islandora_view_datastream_set_chunk_headers($datastream);
          }
          // Try not to load the file into PHP memory!
          // Close and flush ALL the output buffers!
          while (@ob_end_flush()) {
          };

          if (isset($_SERVER['HTTP_RANGE'])) {
            if ($chunk_headers) {
              islandora_view_datastream_deliver_chunks($datastream, $chunk_headers);
            }
          }
          else {
            $datastream->getContent('php://output');
          }
        } 
    }
    catch (Exception $ex){
        drupal_set_message(t('Cannot download the datastream for this link %e', array('%e' => $ex)), 'error');
    }

    exit();
}

function islandora_bookreader_custom_settings($form, &$form_state) {
    module_load_include('inc', 'islandora_internet_archive_bookreader_custom', 'includes/admin');
    $collections = get_collection_options();
    //$customs = get_custom_options();
    //$views = get_view_options();
    //$collection_view_associations = load_collection_view_associations();
    
    $form['bookreader_custom_fieldset'] = array(
        '#type' => 'fieldset',
        '#title' => t('Configure the islandora bookreader customization settings'),
        '#prefix' => '<div id="bookreader_custom_div">',
        '#suffix' => '</div>',
    );
    
    $form['bookreader_custom_fieldset']['wrapper'][ISLANDORA_BOOKREADER_CUSTOM_COLLECTIONS] = array(
        '#type' => 'select',
        '#title' => t('Select an Islandora book collection ...'),
        '#required' => true,
        '#options' => $collections,
        '#description' => t('Choose a book collection to set up the solr view feed.'),
    );

    $form['bookreader_custom_fieldset']['wrapper'][ISLANDORA_BOOKREADER_CUSTOM_PDF_DOWNLOAD_SHOW] = array(
        '#type' => 'radios',
        '#title' => t('Show the PDF book download link'),
        '#required' => true,
        '#options' => array(1 => t('Yes'), 0 => t('No')),
    );
    
    $form['bookreader_custom_fieldset']['wrapper'][ISLANDORA_BOOKREADER_CUSTOM_PAGE_DOWNLOAD_SHOW] = array(
        '#type' => 'radios',
        '#title' => t('Show the book page images download link'),
        '#required' => true,
        '#options' => array(1 => t('Yes'), 0 => t('No')),
    );
    
    $form['bookreader_custom_fieldset']['wrapper'][ISLANDORA_BOOKREADER_CUSTOM_SOCIAL_LINK_SHOW] = array(
        '#type' => 'radios',
        '#title' => t('Show the social links to the book and pages'),
        '#required' => true,
        '#options' => array(1 => t('Yes'), 0 => t('No')),
    );
    $form['actions']['#type'] = 'actions';
    $form['actions']['submit'] = array('#type' => 'submit', '#value' => t('Save configuration'));

    if (!empty($_POST) && form_get_errors()) {
      drupal_set_message(t('The settings have not been saved because of the errors.'), 'error');
    }
    
    $form['#submit'][] = 'islandora_bookreader_custom_settings_submit';
    if (!isset($form['#theme'])) {
      $form['#theme'] = 'system_settings_form';
    }

    $bookreader_bookreader_custom_admin_settings = array(
        'collection' => ISLANDORA_BOOKREADER_CUSTOM_COLLECTIONS,
        'pdf_download_link' => ISLANDORA_BOOKREADER_CUSTOM_PDF_DOWNLOAD_SHOW,
        'page_image_download_link' => ISLANDORA_BOOKREADER_CUSTOM_PAGE_DOWNLOAD_SHOW,   
        'social_link' => ISLANDORA_BOOKREADER_CUSTOM_SOCIAL_LINK_SHOW,
    );
    drupal_add_js(array('islandora_bookreader_custom_admin' => $bookreader_bookreader_custom_admin_settings), 'setting');
    drupal_add_js(drupal_get_path('module', 'islandora_internet_archive_bookreader_custom') . '/js/bookreader_custom_admin.js', array('group' => JS_LIBRARY));
    
    return $form;
}

function islandora_bookreader_custom_settings_submit($form, &$form_state) {
    module_load_include('inc', 'islandora_internet_archive_bookreader_custom', 'includes/utilities');
    save_islandora_bookreader_custom_configuration(
            $form_state['values'][ISLANDORA_BOOKREADER_CUSTOM_COLLECTIONS], 
            $form_state['values'][ISLANDORA_BOOKREADER_CUSTOM_PDF_DOWNLOAD_SHOW], 
            $form_state['values'][ISLANDORA_BOOKREADER_CUSTOM_PAGE_DOWNLOAD_SHOW],
            $form_state['values'][ISLANDORA_BOOKREADER_CUSTOM_SOCIAL_LINK_SHOW]
    );
    drupal_set_message(t('The settings for islandora bookreader customizations have been saved.'));
}

function islandora_bookreader_custom_access_callback($perms, AbstractFedoraObject $object = NULL, $custom_type = NULL) {
    
    $has_access = FALSE;
    
    for ($i = 0; $i < count($perms) && !$has_access; $i++) {
      $has_access = $has_access || islandora_object_access($perms[$i], $object);
    }
    
    if($has_access == TRUE && !empty($custom_type)){
        module_load_include('inc', 'islandora_internet_archive_bookreader_custom', 'includes/utilities');
        $has_access = hasAccessCustomFeature($object, $custom_type);
    }

    return $has_access;
}
